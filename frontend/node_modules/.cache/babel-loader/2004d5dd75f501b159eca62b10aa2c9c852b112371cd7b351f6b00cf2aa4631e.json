{"ast":null,"code":"import axios from 'axios';\nimport { getToken, removeTokens } from '../utils/auth';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000/api';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add token to requests\napi.interceptors.request.use(config => {\n  const token = getToken();\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Handle response errors\napi.interceptors.response.use(response => response, error => {\n  var _error$response, _error$response2;\n  // Handle network errors\n  if (!error.response) {\n    console.error('Network error:', error.message);\n    return Promise.reject({\n      message: 'Network error. Please check your connection and try again.',\n      type: 'network'\n    });\n  }\n\n  // Handle authentication errors\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    // Token expired or invalid\n    removeTokens();\n    // Only redirect if not already on login page\n    if (!window.location.pathname.includes('/login')) {\n      window.location.href = '/login';\n    }\n  }\n\n  // Handle server errors\n  if (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) >= 500) {\n    console.error('Server error:', error.response.data);\n    return Promise.reject({\n      message: 'Server error. Please try again later.',\n      type: 'server',\n      originalError: error\n    });\n  }\n  return Promise.reject(error);\n});\n\n// Auth API calls\nexport const authAPI = {\n  register: userData => api.post('/auth/register/', userData),\n  login: credentials => api.post('/auth/login/', credentials),\n  logout: refreshToken => api.post('/auth/logout/', {\n    refresh_token: refreshToken\n  }),\n  getProfile: () => api.get('/auth/profile/'),\n  updateProfile: profileData => api.put('/auth/update-profile/', profileData),\n  changePassword: passwordData => api.post('/auth/change-password/', passwordData),\n  deleteAccount: confirmationData => api.post('/auth/delete-account/', confirmationData)\n};\nexport default api;","map":{"version":3,"names":["axios","getToken","removeTokens","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","Authorization","error","Promise","reject","response","_error$response","_error$response2","console","message","type","status","window","location","pathname","includes","href","data","originalError","authAPI","register","userData","post","login","credentials","logout","refreshToken","refresh_token","getProfile","get","updateProfile","profileData","put","changePassword","passwordData","deleteAccount","confirmationData"],"sources":["C:/Users/mamid/parking/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\nimport { getToken, removeTokens } from '../utils/auth';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000/api';\r\n\r\n// Create axios instance\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Add token to requests\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = getToken();\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Handle response errors\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    // Handle network errors\r\n    if (!error.response) {\r\n      console.error('Network error:', error.message);\r\n      return Promise.reject({\r\n        message: 'Network error. Please check your connection and try again.',\r\n        type: 'network'\r\n      });\r\n    }\r\n\r\n    // Handle authentication errors\r\n    if (error.response?.status === 401) {\r\n      // Token expired or invalid\r\n      removeTokens();\r\n      // Only redirect if not already on login page\r\n      if (!window.location.pathname.includes('/login')) {\r\n        window.location.href = '/login';\r\n      }\r\n    }\r\n\r\n    // Handle server errors\r\n    if (error.response?.status >= 500) {\r\n      console.error('Server error:', error.response.data);\r\n      return Promise.reject({\r\n        message: 'Server error. Please try again later.',\r\n        type: 'server',\r\n        originalError: error\r\n      });\r\n    }\r\n\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Auth API calls\r\nexport const authAPI = {\r\n  register: (userData) => api.post('/auth/register/', userData),\r\n  login: (credentials) => api.post('/auth/login/', credentials),\r\n  logout: (refreshToken) => api.post('/auth/logout/', { refresh_token: refreshToken }),\r\n  getProfile: () => api.get('/auth/profile/'),\r\n  updateProfile: (profileData) => api.put('/auth/update-profile/', profileData),\r\n  changePassword: (passwordData) => api.post('/auth/change-password/', passwordData),\r\n  deleteAccount: (confirmationData) => api.post('/auth/delete-account/', confirmationData),\r\n};\r\n\r\nexport default api;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}