{"ast":null,"code":"// Authentication utility functions\n\nexport const getToken = () => {\n  return localStorage.getItem('access_token');\n};\nexport const getRefreshToken = () => {\n  return localStorage.getItem('refresh_token');\n};\nexport const setTokens = (accessToken, refreshToken) => {\n  localStorage.setItem('access_token', accessToken);\n  localStorage.setItem('refresh_token', refreshToken);\n};\nexport const removeTokens = () => {\n  localStorage.removeItem('access_token');\n  localStorage.removeItem('refresh_token');\n};\nexport const isAuthenticated = () => {\n  const token = getToken();\n  if (!token) return false;\n  try {\n    // Check if token is expired\n    const payload = JSON.parse(atob(token.split('.')[1]));\n    const currentTime = Date.now() / 1000;\n    return payload.exp > currentTime;\n  } catch (error) {\n    return false;\n  }\n};\nexport const getUserFromToken = () => {\n  const token = getToken();\n  if (!token) return null;\n  try {\n    const payload = JSON.parse(atob(token.split('.')[1]));\n    return payload;\n  } catch (error) {\n    return null;\n  }\n};","map":{"version":3,"names":["getToken","localStorage","getItem","getRefreshToken","setTokens","accessToken","refreshToken","setItem","removeTokens","removeItem","isAuthenticated","token","payload","JSON","parse","atob","split","currentTime","Date","now","exp","error","getUserFromToken"],"sources":["C:/Users/mamid/parking/frontend/src/utils/auth.js"],"sourcesContent":["// Authentication utility functions\r\n\r\nexport const getToken = () => {\r\n  return localStorage.getItem('access_token');\r\n};\r\n\r\nexport const getRefreshToken = () => {\r\n  return localStorage.getItem('refresh_token');\r\n};\r\n\r\nexport const setTokens = (accessToken, refreshToken) => {\r\n  localStorage.setItem('access_token', accessToken);\r\n  localStorage.setItem('refresh_token', refreshToken);\r\n};\r\n\r\nexport const removeTokens = () => {\r\n  localStorage.removeItem('access_token');\r\n  localStorage.removeItem('refresh_token');\r\n};\r\n\r\nexport const isAuthenticated = () => {\r\n  const token = getToken();\r\n  if (!token) return false;\r\n  \r\n  try {\r\n    // Check if token is expired\r\n    const payload = JSON.parse(atob(token.split('.')[1]));\r\n    const currentTime = Date.now() / 1000;\r\n    return payload.exp > currentTime;\r\n  } catch (error) {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport const getUserFromToken = () => {\r\n  const token = getToken();\r\n  if (!token) return null;\r\n  \r\n  try {\r\n    const payload = JSON.parse(atob(token.split('.')[1]));\r\n    return payload;\r\n  } catch (error) {\r\n    return null;\r\n  }\r\n};\r\n"],"mappings":"AAAA;;AAEA,OAAO,MAAMA,QAAQ,GAAGA,CAAA,KAAM;EAC5B,OAAOC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;AAC7C,CAAC;AAED,OAAO,MAAMC,eAAe,GAAGA,CAAA,KAAM;EACnC,OAAOF,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC;AAC9C,CAAC;AAED,OAAO,MAAME,SAAS,GAAGA,CAACC,WAAW,EAAEC,YAAY,KAAK;EACtDL,YAAY,CAACM,OAAO,CAAC,cAAc,EAAEF,WAAW,CAAC;EACjDJ,YAAY,CAACM,OAAO,CAAC,eAAe,EAAED,YAAY,CAAC;AACrD,CAAC;AAED,OAAO,MAAME,YAAY,GAAGA,CAAA,KAAM;EAChCP,YAAY,CAACQ,UAAU,CAAC,cAAc,CAAC;EACvCR,YAAY,CAACQ,UAAU,CAAC,eAAe,CAAC;AAC1C,CAAC;AAED,OAAO,MAAMC,eAAe,GAAGA,CAAA,KAAM;EACnC,MAAMC,KAAK,GAAGX,QAAQ,CAAC,CAAC;EACxB,IAAI,CAACW,KAAK,EAAE,OAAO,KAAK;EAExB,IAAI;IACF;IACA,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACJ,KAAK,CAACK,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACrD,MAAMC,WAAW,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,IAAI;IACrC,OAAOP,OAAO,CAACQ,GAAG,GAAGH,WAAW;EAClC,CAAC,CAAC,OAAOI,KAAK,EAAE;IACd,OAAO,KAAK;EACd;AACF,CAAC;AAED,OAAO,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EACpC,MAAMX,KAAK,GAAGX,QAAQ,CAAC,CAAC;EACxB,IAAI,CAACW,KAAK,EAAE,OAAO,IAAI;EAEvB,IAAI;IACF,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACJ,KAAK,CAACK,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACrD,OAAOJ,OAAO;EAChB,CAAC,CAAC,OAAOS,KAAK,EAAE;IACd,OAAO,IAAI;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}